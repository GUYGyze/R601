
PREPARATION ORAL : 

INTRO :
Bonjour a tous

SOMMAIRE : 
Nous allons commencer par vous presenter le projet avec le contexte et les objectifs, puis vous faire une petite demo.
Ensuite on expliquera ce qu'est wireguard et pourquoi wireguard et pas un autre 
Un petit rappel icmp et udp, les algorithmes crées et que font-ils
Les différentes maquettes car on a eu quelques problemes avec les firewalls et pour finir les problemes rencontrés et les différentes solutions

CONTEXTE & OBJECTIF : 
Contexte : 

    On veut traverser un pare-feu qui restreint l'usage d'UDP
    On veut faire de l'UDP pour pouvoir monter un tunnel wireguard par dessus
    On suppose que le pare-feu laisser passer ICMP, ou a minima, ICMP request et ICMP reply (ping).
    On va coder un outil qui encapsule UDP dans ICMP


Objectifs : 
On veut traverser un pare-feu qui restreint l'usage d'UDP, soit totalement, soit sur les ports qui nous intéressent.
On veut faire de l'UDP pour pouvoir monter un tunnel wireguard par dessus
On ne veut pas encapsuler notre trafic dans TCP ou un protocole au dessus de TCP pour éviter le phénomène de "TCP Meltdown" 
On suppose que le pare-feu laisse passer ICMP
On va coder un outil qui encapsule UDP dans ICMP à l'aide du payload ICMP.

DEMO :

QU'EST-CE QUE WIREGUARD ?
WIREGUARD

Un tunnel WireGuard est une connexion VPN (Virtual Private Network) chiffrée qui permet d'établir une communication sécurisée entre plusieurs machines via un réseau non sécurisé, comme Internet.
    • Chaque pair possède une paire de clés (privée/publique).
    • L'authentification et l'établissement du tunnel se font via une combinaison de ces clés, sans nécessité d'échange complexe comme avec TLS.
Chaque pair possède une paire de clés (privée/publique).
L'authentification et l'établissement du tunnel se font via une combinaison de ces clés, sans nécessité d'échange complexe comme avec TLS.

Silencieux par défaut
    Contrairement à d'autres VPN qui envoient régulièrement des signaux pour garder la connexion active, WireGuard reste inactif tant qu'aucune donnée n'est échangée.
    Cela le rend difficile à détecter par des pare-feu, surtout avec l'utilisation du mode stealth.

Contrairement à IPsec (complexe avec ses multiples modes et algorithmes) ou OpenVPN (nécessitant des certificats et une gestion plus lourde), WireGuard fonctionne avec une simple paire de clés publiques/privées et quelques lignes de configuration.


RAPPELS UDP & ICMP

UDP

Définition protocole UDP
Comment il est construit
à quoi il sert

UDP est aussi un protocole de communication
Sans connexion : Contrairement à TCP, UDP n'établit pas de session entre l'émetteur et le récepteur avant d'envoyer des données.
Il va transporter les données vers un hôte distant sans chercher à savoir si l'hôte de destination a bien reçu l'ensemble des données.
    • Rapide et léger : Il ne gère pas la correction d’erreurs ni le contrôle de flux, ce qui réduit la latence.
    • Pas de garantie de livraison : Les paquets peuvent être perdus, dupliqués ou reçus dans le désordre.
    • Encapsulation simple : Chaque message UDP est encapsulé directement dans un datagramme IP.
Contournement des pare-feu
Certains pare-feu bloquent les paquets UDP/TCP mais laissent passer les requêtes ICMP (notamment les pings).
En encapsulant UDP dans ICMP, on peut faire transiter du trafic sous une forme souvent autorisée.

ICMP 

Définition protocole ICMP
Comment il est construit
à quoi il sert

C'est un protocole de la couche réseau du modèle OSI, utilisé principalement pour la gestion des erreurs et les diagnostics dans les réseaux IP.
Caractéristiques principales :
    Messages de contrôle et de diagnostic : Il est utilisé pour transmettre des messages d'erreur et des informations de contrôle sur le réseau, par exemple lors de la détection d'une destination injoignable.
    Exemples de commandes ICMP :
        Ping : Utilise ICMP pour tester la connectivité entre deux hôtes.
        Traceroute : Utilise ICMP pour suivre le chemin des paquets à travers un réseau.
    Types de messages :
        Echo request / Echo reply (pour le ping).
        Destination Unreachable (lorsqu'un hôte ou un réseau est injoignable).
        Time exceeded (lorsqu'un paquet a expiré dans le réseau).


ALGORITHMES :
la partie technique aux technichiens 

MAQUETTE NFTABLES: 
J'en sais rien
Nftables est un parefeu intégrer au pc il fonctionne comme un service et on a rapidement changé de firewall car il posait problème, par exemple quand on bloque tout le traffic on voit quand meme les paquets partir sur la capture wireshark alors qu'ils ne partent pas, la capture wireshark se fait avant le blocage de nftables donc ca pose probleme pour le debuggage avec wireshark 
donc on a préféré changer de parefeu pour un pas forcément plus simple mais déjà on sait s'en servir.

MAQUETTE STORMSHIELD : rajouter un switch sur le schéma

Lors de la configuration, on a utilisé VirtualBox avec des interfaces en bridge, associées à des adresses IP virtuelles. ona a ensuite configuré ces IP sur des interfaces sur le Stormshield.
Pourquoi utiliser une VM Stormshield ?
Une VM Stormshield est une alternative logicielle aux pare-feu physiques qui peut être intéressante dans plusieurs cas :
Flexibilité et test en environnement virtuel
    Permet de tester des configurations sans investir dans du matériel.
    Facile à déployer sur un hyperviseur (VMware ESXi, Hyper-V, Proxmox, etc.).
Économie de coûts
    Pas besoin d’acheter un équipement dédié si tu as déjà une infrastructure virtuelle.
    Peut être mutualisée avec d’autres services sur le même hyperviseur.
Facilité d’intégration dans des infrastructures cloud/hybrides
    Peut être déployée dans des environnements de cloud privé ou public (ex. Azure, AWS).
    Adaptée aux entreprises qui virtualisent leur infrastructure réseau.
Fonctionnalités avancées de sécurité
    Firewalling, IDS/IPS, VPN, filtrage Web, etc.
    Meilleure gestion des règles et logs qu’un simple pare-feu iptables/nftables.

Comparé à nftables :

1. Interface graphique plus intuitive
 Stormshield offre une interface graphique qui simplifie la gestion des règles de pare-feu, par exemple VPN, et IDS/IPS.
 Avec nftables, tout se fait en ligne de commande, ce qui peut être plus complexe à administrer.
2. Fonctionnalités avancées intégrées 
 Stormshield inclut un IDS/IPS (détection et prévention d’intrusions), ce qui n’est pas natif dans nftables.
 Gestion centralisée des logs et alertes, contrairement à nftables où il faut configurer manuellement la journalisation.
3. Sécurisation plus simple et préconfigurée 
 Stormshield applique par défaut des bonnes pratiques de sécurité, alors que nftables demande une configuration manuelle avancée.
 Gestion des VPN (IPSec/SSL) native dans Stormshield, alors qu’avec nftables, il faut ajouter des outils comme StrongSwan/OpenVPN.


    Problèmes rencontrés : 

Toutefois, après un certain temps, la connexion a cessé de fonctionner.

    Solutions trouvées : 

Face à ce problème, on a décidé de passer à un firewall FortiGate physique, en évitant l'utilisation d'une machine virtuelle et d'un switch. 
Cela m'a permis de résoudre les problèmes de configuration et d'interface rencontrés avec la VM Stormshield.

Ce qui me permettait d'avoir également des interfaces physiques dédiées avec segmentation plus efficace et d'avoir une configuration persistante donc pas besoin de tout reparamétrer à chaque session.

MAQUETTE FORTIGATE :

CONCLUSION
En conclusion, bien que l'encapsulation de l'UDP dans de l'ICMP soit une technique parfois utilisée dans des attaques pour contourner les contrôles de sécurité, 
il est crucial de mettre en place des mécanismes pour détecter et bloquer ce type de trafic. 
Par exemple, l'utilisation d'un IDS (Intrusion Detection System) capable d'analyser les paquets ICMP et de détecter des anomalies, comme une longueur de paquet inhabituelle ou des motifs spécifiques, 
permettrait de contrer efficacement cette méthode. Cette approche permettrait non seulement de détecter les tentatives d'encapsulation, mais aussi d'empêcher leur exploitation pour des attaques ou des accès non autorisés.

