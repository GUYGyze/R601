def capture_wg0_traffic(server_ip):
    """
    Capture le trafic sur l'interface wg0 et l'encapsule dans ICMP.
    """
    try:
        # Créer un socket raw pour capturer le trafic
        with socket.socket(socket.AF_PACKET, socket.SOCK_RAW, socket.htons(0x0003)) as s:
            s.bind(('wg0', 0))
            print(f"[+] Capture active sur l'interface wg0")
            
            while True:
                packet = s.recv(65535)
                # Les paquets sur wg0 sont déjà des paquets IP
                # On doit extraire les données UDP (sauter l'en-tête IP)
                ip_header_len = (packet[14] & 0x0F) * 4  # L'en-tête Ethernet fait 14 octets
                protocol = packet[14+9]  # Le protocole est à l'offset 9 dans l'en-tête IP
                
                # Si c'est du UDP
                if protocol == 17:  # 17 = UDP
                    # Extraire la charge utile UDP (sauter l'en-tête UDP)
                    udp_payload = packet[14 + ip_header_len + 8:]
                    
                    if len(udp_payload) > 0:
                        print(f"[+] Trafic UDP capturé sur wg0, taille: {len(udp_payload)}")
                        # Encapsuler dans ICMP et envoyer
                        send_icmp_packet(server_ip, udp_payload)
                        print(f"[+] Données encapsulées et envoyées à {server_ip}")
    except Exception as e:
        print(f"[-] Erreur dans capture_wg0_traffic: {e}")
